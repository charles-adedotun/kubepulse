name: Go CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: ['1.22', '1.23']
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
    
    - name: Get dependencies
      run: |
        go mod download
        go mod verify
    
    - name: Run go vet
      run: go vet ./...
    
    # Staticcheck disabled temporarily due to Go version compatibility issues
    # - name: Run staticcheck
    #   uses: dominikh/staticcheck-action@v1
    #   with:
    #     version: "latest"
    #     install-go: false
    
    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
    
    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.23'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true
    
    - name: Build binary
      run: |
        go build -v -o bin/kubepulse ./cmd/kubepulse
        
    - name: Test binary
      run: |
        ./bin/kubepulse --version
        ./bin/kubepulse --help
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: kubepulse-linux-amd64
        path: bin/kubepulse
        retention-days: 7

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true
    
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-fmt sarif -out gosec-results.sarif ./...'
    
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: gosec-results.sarif
    
    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  compatibility:
    name: Cross-Platform Compatibility
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.23']
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
    
    - name: Get dependencies
      run: |
        go mod download
        go mod verify
    
    - name: Build binary
      run: |
        go build -v -o kubepulse${{ matrix.os == 'windows-latest' && '.exe' || '' }} ./cmd/kubepulse
    
    - name: Test binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        ./kubepulse --version
        ./kubepulse --help
    
    - name: Test binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        ./kubepulse.exe --version
        ./kubepulse.exe --help
    
    - name: Run basic tests
      run: go test -v -short ./...
    
    - name: Upload platform-specific artifact
      uses: actions/upload-artifact@v4
      with:
        name: kubepulse-${{ matrix.os }}-${{ matrix.go-version }}
        path: kubepulse${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        retention-days: 7