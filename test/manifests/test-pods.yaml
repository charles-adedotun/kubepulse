# Test namespace
apiVersion: v1
kind: Namespace
metadata:
  name: kubepulse-test
---
# Healthy nginx pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthy-app
  namespace: kubepulse-test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: healthy-app
  template:
    metadata:
      labels:
        app: healthy-app
    spec:
      containers:
      - name: nginx
        image: nginx:1.21
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
# Failing pod - bad image
apiVersion: apps/v1
kind: Deployment
metadata:
  name: failing-app
  namespace: kubepulse-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: failing-app
  template:
    metadata:
      labels:
        app: failing-app
    spec:
      containers:
      - name: bad-image
        image: nonexistent-image:latest
        imagePullPolicy: Always
---
# Pod with high restart count simulation
apiVersion: v1
kind: Pod
metadata:
  name: crash-loop-pod
  namespace: kubepulse-test
  labels:
    app: crash-loop
spec:
  restartPolicy: Always
  containers:
  - name: crasher
    image: busybox:1.35
    command: ["sh", "-c", "echo 'Starting...' && sleep 10 && echo 'Crashing...' && exit 1"]
    resources:
      requests:
        memory: "32Mi"
        cpu: "10m"
      limits:
        memory: "64Mi"
        cpu: "20m"
---
# Pod stuck in pending (missing PVC)
apiVersion: v1
kind: Pod
metadata:
  name: pending-pod
  namespace: kubepulse-test
  labels:
    app: pending
spec:
  containers:
  - name: app
    image: nginx:1.21
    volumeMounts:
    - name: missing-volume
      mountPath: /data
  volumes:
  - name: missing-volume
    persistentVolumeClaim:
      claimName: nonexistent-pvc
---
# CPU intensive pod (will show high resource usage) - LIMITED TO PREVENT SYSTEM CRASH
apiVersion: v1
kind: Pod
metadata:
  name: cpu-hog
  namespace: kubepulse-test
  labels:
    app: cpu-intensive
spec:
  containers:
  - name: stress
    image: polinux/stress
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "200m"  # Limited to 0.2 CPU cores max
    command: ["stress"]
    args: ["--cpu", "1", "--timeout", "300s"]  # Only 5 minutes, single CPU thread
---
# Memory intensive pod - LIMITED TO PREVENT SYSTEM CRASH
apiVersion: v1
kind: Pod
metadata:
  name: memory-hog
  namespace: kubepulse-test
  labels:
    app: memory-intensive
spec:
  containers:
  - name: stress
    image: polinux/stress
    resources:
      requests:
        memory: "128Mi"
        cpu: "25m"
      limits:
        memory: "256Mi"  # Limited to 256MB max
        cpu: "50m"
    command: ["stress"]
    args: ["--vm", "1", "--vm-bytes", "200M", "--timeout", "300s"]  # Only 200MB for 5 minutes
---
# Service for healthy app
apiVersion: v1
kind: Service
metadata:
  name: healthy-app-service
  namespace: kubepulse-test
spec:
  selector:
    app: healthy-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80